// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE

#include <dirent.h>
#include <endian.h>
#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/prctl.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <time.h>
#include <unistd.h>

static void sleep_ms(uint64_t ms)
{
  usleep(ms * 1000);
}

static uint64_t current_time_ms(void)
{
  struct timespec ts;
  if (clock_gettime(CLOCK_MONOTONIC, &ts))
    exit(1);
  return (uint64_t)ts.tv_sec * 1000 + (uint64_t)ts.tv_nsec / 1000000;
}

static bool write_file(const char* file, const char* what, ...)
{
  char buf[1024];
  va_list args;
  va_start(args, what);
  vsnprintf(buf, sizeof(buf), what, args);
  va_end(args);
  buf[sizeof(buf) - 1] = 0;
  int len = strlen(buf);
  int fd = open(file, O_WRONLY | O_CLOEXEC);
  if (fd == -1)
    return false;
  if (write(fd, buf, len) != len) {
    int err = errno;
    close(fd);
    errno = err;
    return false;
  }
  close(fd);
  return true;
}

static long syz_open_dev(volatile long a0, volatile long a1, volatile long a2)
{
  if (a0 == 0xc || a0 == 0xb) {
    char buf[128];
    sprintf(buf, "/dev/%s/%d:%d", a0 == 0xc ? "char" : "block", (uint8_t)a1,
            (uint8_t)a2);
    return open(buf, O_RDWR, 0);
  } else {
    char buf[1024];
    char* hash;
    strncpy(buf, (char*)a0, sizeof(buf) - 1);
    buf[sizeof(buf) - 1] = 0;
    while ((hash = strchr(buf, '#'))) {
      *hash = '0' + (char)(a1 % 10);
      a1 /= 10;
    }
    return open(buf, a2, 0);
  }
}

static void kill_and_wait(int pid, int* status)
{
  kill(-pid, SIGKILL);
  kill(pid, SIGKILL);
  for (int i = 0; i < 100; i++) {
    if (waitpid(-1, status, WNOHANG | __WALL) == pid)
      return;
    usleep(1000);
  }
  DIR* dir = opendir("/sys/fs/fuse/connections");
  if (dir) {
    for (;;) {
      struct dirent* ent = readdir(dir);
      if (!ent)
        break;
      if (strcmp(ent->d_name, ".") == 0 || strcmp(ent->d_name, "..") == 0)
        continue;
      char abort[300];
      snprintf(abort, sizeof(abort), "/sys/fs/fuse/connections/%s/abort",
               ent->d_name);
      int fd = open(abort, O_WRONLY);
      if (fd == -1) {
        continue;
      }
      if (write(fd, abort, 1) < 0) {
      }
      close(fd);
    }
    closedir(dir);
  } else {
  }
  while (waitpid(-1, status, __WALL) != pid) {
  }
}

static void setup_test()
{
  prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0);
  setpgrp();
  write_file("/proc/self/oom_score_adj", "1000");
}

static void execute_one(void);

#define WAIT_FLAGS __WALL

static void loop(void)
{
  int iter = 0;
  for (;; iter++) {
    int pid = fork();
    if (pid < 0)
      exit(1);
    if (pid == 0) {
      setup_test();
      execute_one();
      exit(0);
    }
    int status = 0;
    uint64_t start = current_time_ms();
    for (;;) {
      if (waitpid(-1, &status, WNOHANG | WAIT_FLAGS) == pid)
        break;
      sleep_ms(1);
      if (current_time_ms() - start < 5 * 1000)
        continue;
      kill_and_wait(pid, &status);
      break;
    }
  }
}

uint64_t r[2] = {0xffffffffffffffff, 0xffffffffffffffff};

void execute_one(void)
{
  intptr_t res = 0;
  res = -1;
  res = syz_open_dev(0xc, 4, 1);
  if (res != -1)
    r[0] = res;
  *(uint16_t*)0x20000100 = 0;
  *(uint16_t*)0x20000102 = 0x7d6;
  *(uint16_t*)0x20000104 = 0xfffd;
  syscall(__NR_ioctl, r[0], 0x5609, 0x20000100ul);
  res = -1;
  res = syz_open_dev(0xc, 4, 1);
  if (res != -1)
    r[1] = res;
  *(uint64_t*)0x20000140 = 0;
  *(uint64_t*)0x20000148 = 0;
  *(uint64_t*)0x20000150 = 0x200002c0;
  memcpy(
      (void*)0x200002c0,
      "\xb5\x7b\x14\x96\xd0\x0e\x8f\xac\x65\x0d\x27\x2a\xa4\x47\xd7\x14\xfd\x97"
      "\x32\x65\x56\x08\xb5\x1a\xf9\x64\xef\xcf\x75\x81\x3a\x06\x0b\x59\x57\xdb"
      "\x00\x8d\x77\xee\x01\xe7\x9c\x04\x93\x92\xdd\x2a\x06\xe5\xcf\x7a\xa2\x37"
      "\x3a\x2e\x6f\x50\x8e\x72\xd4\xf7\x47\x6b\x19\xdb\xd8\xd2\x3f\xc0\x7f\x65"
      "\x72\xa0\x01\xa3\x95\xea\x35\xc3\x13\xd3\x08\xf3\xf8\x16\xbf\x02\x18\xd3"
      "\x17\xb4\x39\x75\x34\x91\xa6\x00\x4a\xaa\xff\x8c\x34\xf6\xdc\xea\x47\x90"
      "\xa8\x0e\xe3\x7a\xde\x1e\x5e\x0e\xe2\x91\xbd\xd5\x61\xdf\x76\x58\x6a\x27"
      "\xab\x5f\xd8\x4f\x44\x96\x2f\xc6\x45\x3b\xad\x3c\xb1\x61\x6a\x55\x4e\x4d"
      "\xb6\xee\x1e\x8e\xae\xdd\x3f\x08\x46\x95\xc1\xb8\xcd\x3d\xe6\xd9\x0b\x11"
      "\xe7\x74\x20\x88\x17\x45\xc0\x37\xd6\x03\xff\xc5\x96\x1b\x51\x57\x6d\x41"
      "\xf3\xd3\x17\x9d\x08\x41\x7f\x84\x82\x7d\x81\xcb\x94\xe7\x99\x35\xa0\x99"
      "\x92\xf2\x5f\x47\x8a\xf1\x11\x78\x77\x8d\x92\xd8\x0d\x2e\x17\x6b\x92\x27"
      "\x26\x3a\x97\x54\x9c\x52\xdd\x4d\x79\xef\x49\x41\x94\x07\xbb\xc5\x02\x6a"
      "\x8f\x0e\xd2\x24\xf1\x5b\x2a\xd7\x5c\x58\x62\x2e\x0b\xfe\x06\xce\xb5\xa9"
      "\x3e\xdf\xa6\x9b\x06\xd7\x7b\x4a\x79\x01\x55\x25\xb8\x00\xa1\xb7\x42\x15"
      "\x87\x4b\x35\x92\xcb\x79\x94\x03\x1a\x5f\xf0\xa9\x12\x81\x2c\xbf\x86\x89"
      "\xe7\x47\x39\xab\x6c\x23\x23\x47\xb3\xd0\x69\x14\x46\xf7\x2a\x1c\x17\x08"
      "\x7c\x3a\x87\x0b\x9a\x70\x3f\xfc\x61\x47\xac\x04\xdf\xdb\x4f\x58\x07\x6d"
      "\xd5\x7c\xd9\x2e\xbd\x6c\x57\x5e\x52\x04\xf2\x4f\x1d\xeb\x24\xd5\x9c\x30"
      "\x17\xd2\xd0\xb0\x46\x4e\x40\xca\xb3\x26\x43\x3e\x8a\x77\xd4\x31\xdb\x39"
      "\x1c\x0f\x31\x75\x0c\xd8\x34\x3c\xfe\x47\x48\x7f\xa7\x96\xd6\xa8\xb2\xa8"
      "\x1d\xd8\x76\xd9\xa2\x34\x55\x53\x88\xdd\xd6\x16\x82\x3c\x1c\xc2\x45\xf7"
      "\xcd\x97\xbc\x09\x6a\xcf\xc8\x29\xfd\x01\x69\x52\x70\xfc\x2b\x95\x9d\x82"
      "\xe6\xb9\xdb\x38\xc1\x2f\xd0\x9a\x53\x1f\xc9\xb3\x0d\x5c\x0e\xda\x77\x99"
      "\x3f\x4e\xaa\x7d\xe3\x22\x39\x42\xdd\x79\x75\x8e\x33\x09\x53\x6a\xb2\xe8"
      "\xc7\x42\x1f\xfa\xfe\x85\x38\x81\x96\x1a\xf3\x20\xda\x67\xdd\xf8\x3e\x22"
      "\xd4\x9c\x2b\x51\xba\x6b\x1a\x34\xf9\x5d\xce\xd7\xdd\xd7\x67\xf6\xaf\x66"
      "\xe4\x81\xa1\xa9\x76\x83\x9e\x72\x0b\xd6\x36\xbf\x89\xf8\x2e\xfa\x09\x4c"
      "\x85\x48\xd2\x42\x03\xd3\x7e\x7a\x33\x7c\x93\x2f\x06\x3e\x6b\x16\x2a\x01"
      "\xce\x76\x61\x50\x00\x3d\x97\x86\xaf\x67\xca\x94\x6b\x63\x24\x03\xd8\x89"
      "\xfc\x3b\x25\xac\xd4\x4c\xa7\x34\xe9\xd2\x85\xb0\x1b\x51\x78\x9f\x4b\x95"
      "\x95\xb0\xd1\xe8\xb1\xa9\xb6\xb8\x81\x81\x99\x2a\xf7\x21\x79\x12\x51\xaf"
      "\x5c\x37\x62\x4a\xa0\x7d\x2e\x81\xe7\xa7\x29\x00\x02\xa3\xa2\xbc\x35\x9e"
      "\x72\x9a\x8e\x34\x23\x7a\xda\xf8\x94\x4f\x1f\xe2\x58\xa7\xca\x31\x81\xf4"
      "\xe4\x2b\xdd\x7d\xe0\xf8\xda\xea\x95\x17\xdf\xb0\xbe\x75\xa4\xe1\x80\x8a"
      "\x4c\xd5\x9d\x0b\xdf\xa6\xf6\x46\xdf\x3f\x95\x56\x23\x49\x0d\x1e\x84\xd7"
      "\x8f\x4f\xad\xb1\x6b\x54\x03\xa8\x1a\x25\xce\x2a\x14\x11\x45\xf2\x8d\xab"
      "\x35\x1a\xee\x15\x03\xd6\xe5\x42\xa1\x08\xea\x7c\x67\xdb\xf2\x71\x9f\xc1"
      "\x80\xd3\x45\xfa\x8c\xe3\x2c\xba\x45\x8f\x9d\x6c\xf3\xe1\x67\x46\xd2\x43"
      "\x6b\x1e\x9a\x89\xf9\xa9\x09\x17\x19\x15\x2c\x25\x0a\x1e\x9d\x17\x83\x32"
      "\x89\x10\xf6\xaa\xd3\xdd\xd0\x60\x64\xaf\xd9\x01\x42\x9f\x7f\xb3\xb6\x21"
      "\x8f\x6e\xe8\x19\xd7\xd8\x8e\x6c\xcc\x84\x89\x47\xaa\x85\xc6\xfb\x66\x16"
      "\xd4\xef\x6e\x2b\x17\x62\x62\x43\xc0\x84\x4b\x16\xe8\x1d\x33\xaa\x81\x45"
      "\x40\xc9\x83\x5b\x4b\xd1\x07\x99\xef\xd0\xd2\xa0\xbd\x86\x03\x1e\xdc\x73"
      "\x58\xa9\x86\x51\xf4\xe3\x1c\x95\x25\x31\xbb\x4f\x01\x5c\x87\xca\xab\xae"
      "\xf4\xea\x01\x73\xc9\xb7\x85\xe2\x7b\xbf\xa0\x7c\xf9\xac\xeb\xb2\xa5\x15"
      "\xf2\x29\xe2\x0e\x9f\x1a\x29\x45\xb0\x71\x7e\x84\xeb\x28\x39\xc9\x45\x6b"
      "\x6e\x7c\x86\xb8\x8f\xc5\x79\xab\x7b\x35\x4f\x9c\x51\x67\xdf\xa8\x3f\xa8"
      "\x94\xb1\xe8\xec\x9c\xe4\x5a\xdc\x7b\x7c\xb0\xd7\x65\xa6\x2e\x8e\x39\x95"
      "\xab\x16\xf8\xff\x8b\xce\x26\xf3\x79\x07\xaa\x1b\xa1\xc6\xf7\xf7\x20\x10"
      "\x04\xa4\xd1\x00\xa5\x07\x20\x25\x9e\x20\x63\xf7\x48\x12\x91\xaa\x54\xa8"
      "\x8f\xc3\xd4\xf1\x96\x5a\xb5\x4a\x30\x53\x00\x22\x92\xa4\xa6\xee\x3f\x02"
      "\x5e\xe4\x09\x88\x1e\xe0\x64\x20\xc1\x09\x18\x3d\x38\x01\x4f\x37\x8b\x38"
      "\xc0\xdf\x8c\x33\xf9\x89\x39\x17\x5b\x00\xec\x21\xc8\xb9\x7c\x24\x56\x73"
      "\x1f\x06\x7f\x6a\x65\xe2\x09\xa1\x40\xe0\xbf\xcc\xbe\x4a\xfd\x81\xf7\x3f"
      "\x4b\xd9\x86\x11\xee\xcc\xc0\x56\x1a\xed\x23\xaa\xa6\xa6\x98\xfe\xa8\xe9"
      "\x83\x7f\x4b\x8c\x70\x52\x6b\x47\xd4\xb9\x01\x6a\x07\x6f\x01\x86\xbd\x88"
      "\x2b\x36\xb0\x27\x0e\x38\xde\x24\xbf\x70\x1e\x38\x1d\x8b\x65\x93\x9b\x17"
      "\xcc\xba\x88\x1d\x43\xf9\xea\x7f\xdb\x5b\x04\xa1\xb8\x9a\xe3\xdd\x81\x02"
      "\xa3\x14\xf4\xee\xc4\x7a\x72\xce\x4b\xf9\x8e\x63\x53\x90\xec\x2c\xae\x41"
      "\x35\xc5\xe2\xee\x47\xd0\x4b\xa7\x8e\xec\xd9\x2a\x25\x84\xfd\x9a\x56\x61"
      "\x36\x43\x87\xfd\x00\x19\xcd\x29\x13\x58\x3f\xba\xbe\x04\xcc\xbd\x6a\x3c"
      "\x9d\xc4\xe5\xa1\xf8\x1a\xe8\x96\x03\xe4\xc2\xa5\x37\x1e\x12\xb3\xb8\xe0"
      "\xe5\xd6\x2f\x43\x18\xb2\x81\x07\x48\x7e\xdf\x54\x05\xad\x12\x8a\x52\x03"
      "\xdb\xe1\xc9\x94\xe8\x7e\xaf\xa7\x1f\x9f\x92\xc5\x9c\x3f\xcb\x72\xaf\xa8"
      "\xa0\xd6\xc9\x85\x25\x6a\x2b\x9c\x28\x99\x38\xf0\xcf\xbf\x2e\xab\x5c\x31"
      "\x27\x83\x2a\x76\x6b\xfd\xf1\x98\xfd\x58\x06\x66\xf1\x73\xbd\x21\xd8\xca"
      "\x69\x1a\xfb\xf3\x33\x28\x6a\x77\x88\x2e\x52\x43\xfd\xfc\x69\x16\x7e\x2f"
      "\x2f\x66\x23\x55\xf7\x6b\xe4\xb7\xfe\xdd\xf8\xdc\x8b\x38\xf6\x66\xc5\x5b"
      "\xca\x4c\xba\xfe\x45\x15\xc0\x89\x2b\x17\xbf\xc4\xb8\x4f\x1b\x6b\xfb\x69"
      "\xd5\xfb\xe8\x65\xfe\x54\x3b\x02\xdd\x06\x48\xa7\x98\x58\xc4\x95\xbc\x9c"
      "\xd4\x8d\x2c\x24\x87\x35\x08\xd7\x2d\x5d\xb9\x74\x7b\x82\x3d\x4c\x6a\x8d"
      "\x69\xea\x42\x70\xc6\x4d\x94\x01\x19\x45\x6b\x91\xb4\x89\x56\xb7\x14\x5f"
      "\x3d\xa5\x2e\xe5\xcf\xb5\x42\x4e\x17\x87\x96\x5e\x8e\x8d\xb2\xae\x44\xb6"
      "\xbb\x52\x62\x08\xc4\xce\xf0\x06\x19\xf2\x82\x02\x1b\x1d\xd2\x3c\xa9\xc3"
      "\x05\x3c\xad\x02\x4a\x6c\x36\xf2\x55\x12\xa3\xf4\x03\xad\x19\x94\xaf\x15"
      "\xfd\xb8\xa5\xf7\xc8\xd3\x14\xe8\x36\x01\xd3\x94\x9e\x7f\x84\x42\x60\x17"
      "\x8f\x72\xd6\x8d\x94\xb8\x42\xb5\xa0\xeb\xb5\xdf\x58\x1a\x4f\xbd\x70\x06"
      "\x96\xd4\x75\x0b\x07\xeb\x92\x1a\x0f\x08\xd1\xf3\x2d\xd4\x3e\x07\x20\xdc"
      "\x41\xd7\xe5\x56\xa1\x69\x10\xe2\x2a\x9a\x59\xc5\xb4\x84\xee\x7f\x4e\x6b"
      "\x8d\xd9\xee\x51\x48\x47\x09\x11\x93\x64\x66\x6e\x04\xa6\x6c\x56\x78\xbe"
      "\x70\xd6\xdc\xa3\xb8\x79\x12\xbd\x65\xd0\x40\x3c\x01\x9a\x17\xd9\x60\x59"
      "\x05\x33\xa6\xe4\x96\xac\xca\x98\xcf\x99\x05\xc2\xc4\xfd\x59\xf5\xfb\xf5"
      "\xe4\xa5\x22\xa9\x6d\xcd\x71\x99\x31\xdb\xaf\x1e\xed\xfd\x80\x5c\x39\x9c"
      "\x6d\xe5\x81\x69\x6d\x1e\xf6\x8e\x27\x51\x33\xb1\xb3\x05\x4e\xe9\x87\x90"
      "\xf8\xe2\xf0\x1d\x08\xa7\x8b\xa2\xe0\xe3\x76\x20\xbd\x96\x96\x44\x62\xc0"
      "\x37\x58\x0f\xb9\x96\x79\x54\x07\xb5\x37\xd6\xa3\xa5\xc4\xeb\x2f\x92\x8f"
      "\x07\x10\x26\x6f\xb9\x8b\x97\x34\xf4\xbc\x9a\x1e\x00\x7d\x86\xee\xb2\x8e"
      "\xff\x40\xcf\x0f\xc7\xe1\x37\x14\x9e\xa0\x7b\x05\x0c\xd5\x3f\x85\xb2\x6b"
      "\x75\x88\x05\xc1\xdc\x05\x81\x66\xa9\x42\x8f\x14\x0a\xda\xf6\xaf\x6c\x51"
      "\xdc\x37\x78\x13\x9a\xce\x2b\xb3\xd4\x28\xcc\x8d\x39\xbc\x29\xc3\x2f\xe5"
      "\x5e\x7a\x7c\xd2\x18\xa0\x4e\x26\x9d\xc7\x3b\x4a\x96\x6a\xce\xdb\x2e\x4c"
      "\x52\x25\x93\x22\xed\x58\xf4\x4d\x09\x13\x37\xe2\xd5\xe1\xcd\x03\x6f\x5b"
      "\x7b\x7f\x46\xbe\x49\x06\xb9\x10\xc2\x86\xd7\x6c\x83\xd0\xc4\xbf\x80\xc6"
      "\xee\x0e\x7c\x81\xfc\x90\x09\x3c\x82\xee\x98\x1c\x95\xa0\x31\x2d\x0b\x06"
      "\x4b\xd6\xcf\xfe\xa1\x04\x33\xea\x48\x64\x70\x60\x55\x74\xba\x9f\x48\xef"
      "\x98\x25\x70\x1d\xb0\x26\x13\x30\xdd\x30\x8c\xe1\x60\x4e\xb1\x86\x38\x9b"
      "\x59\xdc\x23\x21\x9c\xe0\xa3\x8e\x92\x41\x73\xab\x9c\x04\x44\xb5\x6e\x0a"
      "\x0d\x3d\x0b\xe0\x84\x4f\xf5\xb6\x83\xa6\xc6\x64\x39\x96\x7f\xba\x5a\x3d"
      "\xde\x24\x39\x84\x83\x5b\x03\xe9\xc6\xf4\x8a\x32\x4a\xc3\x09\xba\x6c\x40"
      "\x5c\x44\xb2\xd1\xad\x5a\x37\x04\x9a\xbf\xcb\x4b\x5a\xfe\x4f\x0f\xd9\x94"
      "\x41\xcc\xd6\xb5\x87\x3f\x1f\xb9\xce\x4c\x72\x99\xee\xd4\x80\x9d\xa1\x76"
      "\x68\x89\xf5\xcc\x6c\xf0\xbc\x74\x8a\xdd\x49\xb4\x45\xc6\x35\xbf\x42\x3e"
      "\x3e\xcd\xf9\xfb\xaa\xa5\x0a\xaf\x47\x36\x69\xda\xa3\x59\x0b\x55\x7c\xd8"
      "\xde\x77\x00\x31\x25\xd9\x4f\x08\x2a\x08\x9c\xb2\x19\xbc\x72\xc3\x4e\x71"
      "\x31\xaa\x9e\x46\xc5\xe2\xfd\xdc\x3f\xf1\x01\x69\x2a\xe6\xd3\xa5\x4e\xde"
      "\x4d\x85\x9d\x73\xd9\xb9\x78\x47\x86\x1e\xdb\xe0\x16\x53\xd2\x2d\xc9\x5d"
      "\x68\xe1\xfb\x96\xdc\x4e\x74\x50\x60\xb9\x1b\xf9\x1a\x51\xd4\x58\xe3\xe8"
      "\x20\x41\x98\x24\x42\x4c\xfb\xf7\x09\x04\x7c\xf9\x78\x2c\x7e\x26\xc4\xc7"
      "\x6c\x9a\x5b\x9d\x23\x7a\x3a\xa1\x87\xd1\x10\x97\xd7\xcf\x1d\x68\x34\xcf"
      "\xad\x8f\x48\xab\xed\x5f\x71\x77\x91\xc7\xa2\x8a\x1a\x11\x4c\x0a\x54\x13"
      "\xb9\x98\xad\x09\x2b\x06\xf2\x26\x31\x1b\x1c\x70\x4a\x9c\xe9\x32\x41\xde"
      "\x5a\x77\xa2\x7a\xb9\x64\xf9\x82\x36\x45\xf8\xa3\x24\x9e\x46\xf6\xc9\xf9"
      "\x3a\x5c\x89\x5b\xa8\x99\xb9\x73\xa0\x3d\xfd\x8d\xb7\x5a\xc8\x9f\x04\x83"
      "\x60\xc6\x94\x56\xe2\xa9\x5a\x60\xfe\xbb\x63\xd8\xb1\xf0\x03\x8b\x00\x0a"
      "\x55\x83\x19\xbc\x9e\xb7\x04\x54\x3e\xcd\xb1\x64\x58\x9a\xe5\x60\xc0\x13"
      "\x0d\x32\x8a\x3d\xc2\xbb\x5b\xaa\xe8\x8d\x87\x3f\xe5\xa4\x75\x9d\xf3\x6d"
      "\x9b\x21\xd2\xa1\x25\x63\xb2\xed\x5a\x2a\x92\x80\x6b\x71\x06\x78\x46\xf5"
      "\x0f\xcb\xcb\x7f\x7f\xbf\xac\x5d\xab\x59\x98\xce\xc7\x62\xbd\x94\x76\x14"
      "\xfc\x08\x7a\xbf\x5a\x77\x52\xe2\x6f\xe6\x4d\x8d\xc9\xd3\x0a\x29\x76\x09"
      "\x3d\xa2\x79\xe7\xe1\x74\xe9\x6b\xa6\xe9\x0b\xd1\x81\x08\x79\x50\x55\x8c"
      "\x30\xe6\x12\x41\x42\x38\x91\xd9\x37\xff\x36\x38\xac\xdb\x21\xe5\x62\x99"
      "\x0e\x01\x72\x07\x82\x76\x9b\xe8\x23\xb3\xd6\x13\x24\x90\x82\x1f\x12\xb0"
      "\x5d\x65\x4f\xca\x83\x27\x39\x4d\x26\xf1\xa7\x76\x55\x58\x31\xf1\x3f\x18"
      "\xf4\xf0\x7a\x41\xc3\x28\x2b\x5d\x36\x63\x64\xb7\xb7\x6e\x11\x53\xa2\x36"
      "\x09\x83\xf6\x4b\x57\x84\xf6\x84\xca\x3f\x52\xc0\x14\xf4\xb0\xae\x33\x3a"
      "\x63\x49\x60\xc3\xac\xe5\xeb\x01\xe8\xbf\x29\xa1\x76\x97\xef\x91\x5a\x33"
      "\x38\xfb\xee\x1d\xfd\x79\xe6\x3c\x34\xbd\x41\xb7\x0c\xe6\xb1\xa0\x20\x42"
      "\x86\xd3\x35\xbc\x4b\x21\x78\x3d\x39\xeb\xa0\xac\x43\x49\x63\x87\x58\x6a"
      "\xa4\x38\x6d\xa8\x2b\x04\xb7\x37\x1d\x15\xff\x47\xab\xfc\xfe\x21\x0e\xb3"
      "\xb1\x14\x3b\x32\xb4\xa6\x9e\xfe\x06\xb6\xda\x77\x69\x0a\x41\x7b\xbc\x82"
      "\x40\x64\xa1\x9f\x74\xfe\xe8\x5e\xbf\xa0\x60\x57\x97\x94\x7d\xf1\x85\xfa"
      "\xed\xe8\x24\x1f\xc7\x99\x05\x5f\xf9\x31\xa8\xb4\x67\x70\xa4\xa5\xf5\x89"
      "\xd3\x49\xde\xd5\xbf\x55\xb2\xc9\x83\xb5\x18\x17\x9a\xf5\x13\x79\x34\x6a"
      "\xee\xae\x18\x96\xc7\x46\x0b\xb4\x75\xa1\xf2\x48\x7a\x8e\x5a\x9f\x89\x92"
      "\x68\x95\xc3\x0b\xee\xeb\x81\xd0\x49\x6a\x09\x48\x5f\x73\x5a\x76\xd5\xe5"
      "\x41\x12\x01\xba\xc3\x5b\xf6\x87\xfe\xc7\x99\x79\x3d\x75\x06\xa6\xd6\xcb"
      "\x8a\x6d\x49\x55\x37\xdb\xe2\x25\xcf\xa6\x3e\x9f\x8b\xb4\x8a\x25\xc2\xa7"
      "\xf9\x61\xb8\x88\x6e\xeb\x7d\x9d\xe3\xac\x10\x75\x63\xd9\x20\xf4\x9f\xf6"
      "\xd3\x3d\xf5\x33\xe2\x7c\xaa\xee\x0e\xff\x02\x84\x41\xb1\x3d\x54\xe2\xeb"
      "\x0d\x1a\x7d\x8f\xa1\xd2\x2b\x6d\xd7\xc8\xb1\x93\x9d\xbb\xa1\x0f\x8b\x8c"
      "\xfc\xa7\x8a\xc4\x02\x7b\xbc\xc6\x36\xbf\x59\xcc\xa8\x4a\xe2\x0f\xbc\x32"
      "\xde\x55\x2b\x42\xff\x6b\x16\x76\xa6\x65\x63\xf9\x84\xad\x52\x67\x84\xd5"
      "\x1b\x5a\xe3\x0e\xa4\x45\x54\x22\xf0\x95\xa6\x6e\xba\x4e\x3c\x8c\xf5\x51"
      "\xe6\xca\xe2\x35\x00\x10\x33\x46\x16\x03\x42\x72\x28\xb8\xdf\x58\x05\x2a"
      "\x28\x00\xda\xe3\x2f\x57\xa3\xfe\x42\x88\x30\x47\x95\x34\xee\x0b\x84\xfa"
      "\xe0\xb6\x04\x77\xa9\x99\x42\x98\x9d\x2f\x54\x89\x99\x9a\xb4\x21\xef\x25"
      "\x8a\x3e\x6d\x8e\x25\x22\xac\x7f\xf3\xce\xfe\xfe\xb4\x08\x7b\xfb\xc7\x87"
      "\x4e\x50\xe9\xd2\x05\x42\xae\x71\x45\xb5\x55\x84\xc0\x6d\x9a\xb3\xb1\xb1"
      "\x31\x39\xbf\x2d\x7b\xca\xfa\x20\xe1\xf0\x15\x35\xb5\x00\x7b\x05\xcc\x1c"
      "\x5b\xe4\x3d\x51\x22\x4a\x4b\xd4\x8f\xf7\x6e\x3c\xd8\xa4\x69\x32\x15\x80"
      "\xda\x87\xd3\x9c\x3d\x93\x3a\x2f\xcd\xfc\x00\x45\xbc\xa9\x44\x08\xf4\x85"
      "\x66\x82\x29\x35\xc7\xe1\x24\xfe\x3e\x9f\xba\x46\xba\x3a\xa8\x06\x73\xe4"
      "\x9c\x14\x8a\x68\x47\x06\x15\x37\xbe\x88\xc6\x5a\xb5\x4d\x18\xdc\xc0\x02"
      "\x68\x89\x61\x7a\x26\x01\x05\x63\x85\x23\x3f\x63\x8c\x32\x6b\x54\xf2\x7f"
      "\x8d\x74\xc5\x44\x19\xb4\xc7\x4e\xad\x4c\x53\x3a\x62\xc0\x94\x0f\xc3\x23"
      "\x86\x26\x75\x20\x5b\x60\xd7\x27\x0c\x3f\xe5\x48\x70\xb7\x31\xf7\x15\x65"
      "\x36\xf6\x7f\x05\x47\xd2\xb8\x54\xc4\x47\x67\xe6\x7d\x58\xea\xff\xee\x15"
      "\x8f\xb0\x32\x51\xbd\x48\xc6\x5c\xb4\x66\x76\x92\xcc\xaf\xf1\xb1\x9a\x94"
      "\x10\xeb\xd6\xb0\x0a\x35\xf5\x14\x04\xe3\xf4\x49\x3d\xa5\xbb\x88\x7c\x8b"
      "\x3d\xf0\x2b\x11\xc0\x03\x84\xa6\xef\x93\x90\x9c\xbb\x69\x43\x84\x51\xec"
      "\x85\x6a\x37\x15\x73\x46\x2f\xb5\x80\xf4\x39\xbd\x71\xdb\x5c\xcf\x57\x00"
      "\x42\x67\x63\xc4\x2a\x0e\x3b\x69\x6b\x10\x06\x4c\x38\xa3\x36\x22\xb1\xa6"
      "\x00\x7f\xbf\x6c\x65\xe9\x19\xb0\x3e\xac\x92\x54\x69\x06\x98\xfc\xa0\x4e"
      "\x5a\x50\xb0\x37\xf0\x99\xa4\xe5\xd4\x3c\x9c\x9d\x72\x55\x99\x56\x9f\xf0"
      "\x03\xb5\x7a\x1a\x85\x9d\xa9\xba\xde\xc8\xc5\x14\xf2\x5b\x25\xfc\xc3\x31"
      "\xcb\x1a\xdf\xd3\xb8\x7b\x51\xa4\x04\xde\xd4\xc2\x86\xd3\x8e\x9b\x7e\x04"
      "\x5e\xa7\x4f\xea\x38\x41\x4c\x61\xd6\x38\x77\x72\x0a\xa8\xf4\xd3\xd0\x6f"
      "\x4d\x7f\x99\x12\xb5\x7d\xb1\xc2\x94\x6f\xd7\x48\x1b\x2f\xef\x79\x59\x06"
      "\xc8\x42\xd2\xb2\xf3\x6a\xc2\x86\x75\x60\xd9\x5a\x09\x81\x76\x8d\xec\x2e"
      "\xb0\xe8\x06\x8b\x3b\x5f\xbd\x57\x29\xcd\xf5\x83\x17\xdd\xa8\xab\x16\xcc"
      "\xeb\xa5\x49\x56\xcd\xb3\xc0\xe6\x15\x62\x4c\xce\xe7\xde\xaa\x29\x3f\x9f"
      "\xe3\x92\x03\x1a\xa2\x90\x7a\xab\xab\xd9\x49\x63\x3e\x3a\x23\x72\x8c\xcc"
      "\x7c\x99\x04\x9d\xaf\x35\xd6\xff\xf9\x03\xb0\x97\x51\x83\xad\x4a\x3f\x93"
      "\x83\xc6\x02\xe8\xb4\x88\x44\xa7\xf0\x97\x24\x8f\x70\xf1\xf0\xc8\x69\xbd"
      "\x04\x38\x52\x73\xb0\x85\xdd\x68\x4e\x67\xb5\xab\xc5\x6e\xf2\xe7\xab\x42"
      "\xef\x68\x62\x2b\xcf\x9a\x0f\xf8\xf4\x81\x1c\x04\xc9\x54\x17\x55\xea\x01"
      "\x15\xab\x23\x33\xfd\x0a\x32\xe5\x5d\x77\xf6\x61\x62\xec\x16\x1a\xd8\x36"
      "\x32\xe4\xed\x16\x83\x01\xde\x8e\xa2\xf8\x08\x43\xd6\xbb\x54\x43\xea\xc8"
      "\x54\x44\x4d\x9c\xd8\xe1\x7f\x85\xcd\x93\xf1\x58\x36\x7c\x53\x77\xcd\x43"
      "\xf0\xe2\x88\xa0\xe4\xcf\xa4\x1e\x38\x5e\xdb\xce\xee\x4f\x53\x5f\xe9\x4a"
      "\x1e\x70\xb0\xbf\xe9\xde\xd2\x6c\x84\xcc\xa0\xcc\x65\x23\x13\x70\xa5\x94"
      "\xdd\x2c\x75\xa4\x5c\xa4\x6e\xf9\xaf\xe7\x15\x88\xea\xa8\xac\xc9\xd6\x70"
      "\x9d\xcb\x90\x2e\x6f\xaf\x48\x6a\x7d\x2c\xc7\x60\x8b\x32\x2d\x58\x81\x12"
      "\xc3\xa5\xda\x58\x39\x40\xee\xcb\x0f\x2b\xb8\x8a\xe1\xb4\xe1\xdc\x1e\xb3"
      "\x21\x26\x5e\x7d\xe5\x06\xd0\xf8\x08\x02\x5f\x1e\x53\x5c\x06\x41\x13\x6f"
      "\x8d\x3a\xca\x29\x44\x03\x9d\x88\xed\x68\xed\x89\x47\xe9\xe2\x71\x47\xf2"
      "\x2f\x55\xd7\xa2\x1b\xca\x74\x58\xde\x92\x88\x6c\xdb\xb1\xed\xa0\xb5\x4a"
      "\x74\x91\x2f\x01\xbc\x44\x01\x3b\x67\x41\x54\xec\x82\x3e\x0b\x17\xc8\xc7"
      "\xfe\x07\xe2\x30\x12\x55\x22\x16\x49\xd9\xb6\xb3\xbb\xab\xb6\xe5\x11\x4c"
      "\x29\x41\xe4\x10\x78\x38\xbc\x21\x3c\x0f\x60\x63\xcc\xec\xa1\x44\x73\x3a"
      "\xba\x64\x97\xb4\xaf\xca\x11\x4d\xf3\xf9\xf8\xe3\x97\xac\xb4\xfc\xa6\xd5"
      "\x9d\xb0\x5d\xca\x12\x99\xc6\xca\xba\x24\x96\xf7\x0c\x06\x4c\x39\x9d\x20"
      "\x4f\xce\x4b\x37\xc8\xe2\x60\xc0\xa7\x9a\x16\x1e\x84\x46\x34\x02\xcc\x14"
      "\x47\x6f\x6f\x43\xd7\xde\x39\x94\x4a\xc2\x0a\x1f\x80\x76\xc3\x6d\x92\xc7"
      "\xbe\xfc\xf8\x71\xd7\xc2\x5d\x56\xaa\x00\xee\x8f\x5e\x1d\x36\x52\x14\x7e"
      "\x6e\x24\xb4\x8a\x81\xb7\x0c\x22\x81\x09\x8f\x35\x73\xa0\x4b\x24\x8f\x78"
      "\x59\xbf\x44\x1c\xd8\x08\xf8\xc5\xab\x07\xf5\x4f\x36\x6f\xd9\x9a\xe0\x9c"
      "\x62\x7a\x55\x72\x07\x2c\xcb\xe2\x04\xe1\xc1\x1d\x1c\xcb\x15\x06\x4c\xb2"
      "\xf6\x2b",
      3584);
  *(uint64_t*)0x20000158 = 0xe00;
  *(uint64_t*)0x20000160 = 0;
  *(uint64_t*)0x20000168 = 0;
  syscall(__NR_writev, r[1], 0x20000140ul, 3ul);
}
int main(void)
{
  syscall(__NR_mmap, 0x1ffff000ul, 0x1000ul, 0ul, 0x32ul, -1, 0ul);
  syscall(__NR_mmap, 0x20000000ul, 0x1000000ul, 7ul, 0x32ul, -1, 0ul);
  syscall(__NR_mmap, 0x21000000ul, 0x1000ul, 0ul, 0x32ul, -1, 0ul);
  loop();
  return 0;
}
