// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE

#include <dirent.h>
#include <endian.h>
#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/prctl.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <time.h>
#include <unistd.h>

static void sleep_ms(uint64_t ms)
{
  usleep(ms * 1000);
}

static uint64_t current_time_ms(void)
{
  struct timespec ts;
  if (clock_gettime(CLOCK_MONOTONIC, &ts))
    exit(1);
  return (uint64_t)ts.tv_sec * 1000 + (uint64_t)ts.tv_nsec / 1000000;
}

static bool write_file(const char* file, const char* what, ...)
{
  char buf[1024];
  va_list args;
  va_start(args, what);
  vsnprintf(buf, sizeof(buf), what, args);
  va_end(args);
  buf[sizeof(buf) - 1] = 0;
  int len = strlen(buf);
  int fd = open(file, O_WRONLY | O_CLOEXEC);
  if (fd == -1)
    return false;
  if (write(fd, buf, len) != len) {
    int err = errno;
    close(fd);
    errno = err;
    return false;
  }
  close(fd);
  return true;
}

static long syz_open_dev(volatile long a0, volatile long a1, volatile long a2)
{
  if (a0 == 0xc || a0 == 0xb) {
    char buf[128];
    sprintf(buf, "/dev/%s/%d:%d", a0 == 0xc ? "char" : "block", (uint8_t)a1,
            (uint8_t)a2);
    return open(buf, O_RDWR, 0);
  } else {
    char buf[1024];
    char* hash;
    strncpy(buf, (char*)a0, sizeof(buf) - 1);
    buf[sizeof(buf) - 1] = 0;
    while ((hash = strchr(buf, '#'))) {
      *hash = '0' + (char)(a1 % 10);
      a1 /= 10;
    }
    return open(buf, a2, 0);
  }
}

static void kill_and_wait(int pid, int* status)
{
  kill(-pid, SIGKILL);
  kill(pid, SIGKILL);
  for (int i = 0; i < 100; i++) {
    if (waitpid(-1, status, WNOHANG | __WALL) == pid)
      return;
    usleep(1000);
  }
  DIR* dir = opendir("/sys/fs/fuse/connections");
  if (dir) {
    for (;;) {
      struct dirent* ent = readdir(dir);
      if (!ent)
        break;
      if (strcmp(ent->d_name, ".") == 0 || strcmp(ent->d_name, "..") == 0)
        continue;
      char abort[300];
      snprintf(abort, sizeof(abort), "/sys/fs/fuse/connections/%s/abort",
               ent->d_name);
      int fd = open(abort, O_WRONLY);
      if (fd == -1) {
        continue;
      }
      if (write(fd, abort, 1) < 0) {
      }
      close(fd);
    }
    closedir(dir);
  } else {
  }
  while (waitpid(-1, status, __WALL) != pid) {
  }
}

static void setup_test()
{
  prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0);
  setpgrp();
  write_file("/proc/self/oom_score_adj", "1000");
}

static void execute_one(void);

#define WAIT_FLAGS __WALL

static void loop(void)
{
  int iter = 0;
  for (;; iter++) {
    int pid = fork();
    if (pid < 0)
      exit(1);
    if (pid == 0) {
      setup_test();
      execute_one();
      exit(0);
    }
    int status = 0;
    uint64_t start = current_time_ms();
    for (;;) {
      if (waitpid(-1, &status, WNOHANG | WAIT_FLAGS) == pid)
        break;
      sleep_ms(1);
      if (current_time_ms() - start < 5 * 1000)
        continue;
      kill_and_wait(pid, &status);
      break;
    }
  }
}

uint64_t r[3] = {0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff};

void execute_one(void)
{
  intptr_t res = 0;
  res = -1;
  res = syz_open_dev(0xc, 4, 1);
  if (res != -1)
    r[0] = res;
  *(uint16_t*)0x20000040 = 0x14a0;
  *(uint16_t*)0x20000042 = 4;
  *(uint16_t*)0x20000044 = 0x8001;
  syscall(__NR_ioctl, r[0], 0x5609, 0x20000040ul);
  res = -1;
  res = syz_open_dev(0xc, 4, 1);
  if (res != -1)
    r[1] = res;
  *(uint32_t*)0x20000000 = 0x7ff;
  *(uint32_t*)0x20000004 = 0x27a;
  *(uint32_t*)0x20000008 = 0x80;
  *(uint32_t*)0x2000000c = 0;
  *(uint8_t*)0x20000010 = 6;
  memcpy((void*)0x20000011,
         "\x21\xdc\x5a\x9c\x1d\x2c\x4d\xd6\x96\x34\xea\xfc\x9d\xa7\x2d\xf2\xce"
         "\xcc\x9f",
         19);
  *(uint32_t*)0x20000024 = 0x3f;
  *(uint32_t*)0x20000028 = 7;
  syscall(__NR_ioctl, r[1], 0x402c542d, 0x20000000ul);
  res = -1;
  res = syz_open_dev(0xc, 4, 1);
  if (res != -1)
    r[2] = res;
  *(uint64_t*)0x20000080 = 0;
  *(uint64_t*)0x20000088 = 0;
  *(uint64_t*)0x20000090 = 0x200009c0;
  memcpy(
      (void*)0x200009c0,
      "\x6e\xe2\xce\x90\xe8\xd8\x83\x99\x58\x3c\x5e\x21\x18\x46\xcf\xdb\xcf\x9e"
      "\x7e\x2a\xd9\x56\x0f\xb0\x21\x19\x8c\xc9\x4c\x2e\x59\xda\x16\x46\x2c\xbe"
      "\x73\x8f\xd2\x72\xba\x97\x03\x8a\x68\x08\xde\xc6\xd5\x23\x70\xc7\x5c\x61"
      "\xed\xea\x25\xb6\xcb\xe4\x4b\x63\x5a\x80\xae\xe0\x5b\xe4\xa2\x61\x3a\xa8"
      "\xb0\x31\xd3\x1a\xe1\xd5\x63\x88\x99\x9d\xdd\xa8\xf0\x3f\xa0\x87\xad\xd0"
      "\x97\xda\x4c\xb4\xf3\xc6\xe1\xa4\xe8\x03\x78\x64\xb2\x09\x41\x2f\x9e\x8c"
      "\x50\x91\xd3\xd4\x3c\xfe\x5f\x83\xb9\xf7\xbc\x7d\x7f\x87\xb4\x89\x33\xe8"
      "\x59\x9a\xd4\x74\x73\x8b\x91\xe6\x84\x99\xf4\xd5\x97\x94\xec\x70\xd0\xb6"
      "\x3b\xb8\x4a\xb6\x14\x20\x16\x76\x36\xd7\xe2\x8b\x5e\x15\x23\x58\xda\x8e"
      "\xd2\xd8\x35\x6a\xaf\x41\x28\xcd\xae\x28\xa4\x6f\x36\x76\x40\x30\xf9\x2b"
      "\x8f\x0f\x27\xc7\x46\xf5\xa9\xee\x96\x04\x78\xd2\xd5\x07\xd1\x23\x54\x0a"
      "\x11\xc8\x9e\x0b\x45\x4d\x0b\x67\x28\x17\x3a\xaf\x90\x88\xac\x07\xfd\xe8"
      "\xc1\x91\xf6\xa8\x24\x4c\x4a\x70\x3c\x61\x34\x2f\x3f\xc1\x23\xe6\xd9\xf0"
      "\xdd\x8d\xb2\x48\x4a\xbc\xa5\xef\x4d\xb6\x89\x4e\x5f\x14\x9c\xa4\x17\x44"
      "\x9e\xf5\x9c\x51\xc7\x22\xd6\x7c\xe2\xa6\x10\x6b\xdd\xba\xc1\x86\x59\x51"
      "\x52\x82\xa0\x65\xa7\x36\xce\x8f\xdd\xe7\x8e\x65\xcf\x89\x4a\x83\x88\xa0"
      "\x81\x48\xa2\x51\x98\x2d\xeb\x65\x74\x2d\xbb\x0d\x81\xc5\xfc\x98\x6c\x8e"
      "\x60\xfe\x98\x32\x81\xdb\x70\x9b\x7b\xbe\x1a\xf8\x5b\x42\xbd\x2b\xcc\xab"
      "\x4a\x15\x17\xd4\x00\x6e\xc9\x8b\xc3\x09\x26\x61\x32\xc4\x45\x09\x8b\x73"
      "\xd1\xd7\x80\x58\xe0\xb0\x39\x4e\x36\xf6\x52\x15\x77\xa6\x20\x0a\xb2\x8e"
      "\xbe\xca\x39\xca\x58\x83\x52\x9d\xb0\x55\x3f\x71\x24\xbf\x34\xae\x67\x01"
      "\xed\x9d\x0f\xad\x8a\xe1\x04\xda\xdc\x56\xfd\xe9\x76\x6e\xb0\x41\xd9\xc4"
      "\xcf\x37\xbf\xe6\x17\x78\x79\x24\xbd\xc2\x52\x5f\xba\x89\x23\x26\x7a\x72"
      "\x8d\x55\xfa\xa4\x2a\x57\x0d\x41\xa4\xb5\xc3\xad\x75\x29\xef\x8c\xc5\x7b"
      "\xe6\x9c\xbc\x3d\xb6\xab\x29\xf5\x0c\xed\x05\xa3\x65\x74\x0d\x00\x8a\x83"
      "\x41\x4d\x42\x01\x4d\xdf\xf7\x81\xd4\x40\xde\xc3\xd2\x82\x99\xd0\xb2\xc2"
      "\xf7\xb3\xf2\x74\x8d\xdf\x62\xb4\xf1\xaf\xf4\x2d\x75\xa3\xaa\x85\x39\x20"
      "\x04\x1b\x2f\xd3\xbb\x11\xda\x51\x45\x15\x16\x2e\x37\x7e\x44\xa3\xdf\xa2"
      "\x1e\x27\x84\xf0\xc5\x4e\x01\x00\x7c\x27\xeb\xb0\x22\xf1\x9f\xbd\x04\xcd"
      "\xb4\x07\x67\x66\x82\x57\x41\x60\xc0\x78\xe6\xb1\x95\x81\xf1\xb1\x9e\xe0"
      "\xe2\x8f\xe0\x4b\xf6\x68\xcf\x3b\xbb\x0a\x3e\x3b\xd7\xd0\x73\x86\x8f\x88"
      "\xd9\xc9\x55\x63\xb1\x82\xd3\x13\x2c\x92\x20\xf8\xf9\x41\x30\xcc\xe9\xab"
      "\xbb\xd9\x6e\xd8\xc6\x51\x05\x58\x9e\x70\x85\x43\x23\x10\x9e\xc8\xd1\xde"
      "\x4e\x1a\xd3\xeb\x21\x8a\xd3\x49\x42\x5b\x4c\xdf\x47\x95\x44\x01\x54\x2e"
      "\xe1\x0f\x0d\x2a\x13\xdf\x7a\xf9\xf6\x09\x29\x06\x95\xd1\x40\x50\xfd\x2f"
      "\xbb\xd3\xa7\x4a\x93\x85\xf9\xb2\x5e\x68\xe4\xdd\x14\xb3\x01\xf7\x31\xee"
      "\x46\x6b\x8c\x55\xa5\xed\x73\x5f\x05\x75\xa1\x39\xb8\xea\xd3\x9c\x24\x7c"
      "\x26\x25\x28\x2a\xb7\x6e\xc6\x72\x5c\x1b\x85\xf7\x6b\x02\x90\x8d\xa4\x05"
      "\xfb\xdd\xfb\x27\xf2\xd7\x4d\x1a\x96\xae\xc8\x51\x85\x5b\x88\xc1\xde\xe3"
      "\x52\xa7\x1f\xcf\xa0\x35\xa2\x68\xb5\x6b\x24\xaa\x7a\x56\x35\x38\x48\x49"
      "\xff\xe9\x07\xfa\x44\xff\x7e\xcd\x67\xac\x0a\x07\x29\x38\x5e\xa7\xf6\x0c"
      "\x5c\x43\xa9\x7c\x4c\xe6\x4a\x24\x73\x4f\x25\xc1\x65\x30\xe6\xc0\x59\xbe"
      "\xa5\x4f\x96\x3b\xf3\x12\x5f\x19\x27\xfe\xa9\x20\xa4\xe8\x07\x6d\xe9\xf3"
      "\xe5\x07\x6f\xcc\x50\x29\x60\xfb\xc4\x76\xf9\x76\x52\x7a\xc0\x49\xb9\xe6"
      "\xb3\xad\xbb\x4a\x0b\xdf\x39\x58\x5f\x13\x83\x14\x82\xf7\x79\x33\x8d\x36"
      "\xff\xaa\x47\x0b\xa6\x1b\xfb\x86\xf1\x7b\x42\xb8\xf3\x00\xcc\xce\x79\x97"
      "\xd2\xd9\xf9\x15\x2a\x89\x93\xf0\x43\xf7\xfa\x06\x83\xfd\x86\xab\x8a\x7a"
      "\x88\x8e\x9b\x09\x8f\xf8\x26\x26\x66\xa2\xfc\xb6\xb4\x23\x39\xc0\x61\x66"
      "\xea\xa8\x5a\x31\xc0\xe3\x56\xff\x44\x94\xcf\x9c\xac\x9f\x62\xe8\xfa\xeb"
      "\x37\x22\xbd\xbf\xf6\x9c\x90\xe3\x68\xc4\x7d\x7f\xa9\xab\x4e\x38\x23\xd8"
      "\x7e\xe8\x95\x2f\x01\x62\x58\x14\x4b\xf5\x4b\xcb\xf7\x44\xdb\xad\xe6\x83"
      "\xd2\xa1\x89\xc1\x29\xa7\x4e\x01\x2f\x31\x8a\xd1\x21\xec\x4e\xcf\xbf\xd4"
      "\x0a\xee\x07\xe9\x2e\x4f\x8c\xea\x32\x0c\x7c\xe7\x8f\x56\xce\xec\x5a\x71"
      "\x3d\xde\x53\x32\xd4\x4d\x3c\x69\x7e\x6d\x25\x48\x3c\x86\x1b\xbe\x26\xe1"
      "\x45\x30\x80\x03\xfd\x5f\x40\xc4\xf4\xd6\x17\x1d\x6d\x11\x48\x89\x03\xbf"
      "\x1a\x4d\x23\xdc\x40\x04\xe4\xba\x6d\x2f\x0f\x40\x70\xda\x3f\xe8\x1e\x75"
      "\x1f\x6f\x30\x1a\x06\xfb\xdb\x07\x70\x6e\x4b\xee\xc1\xb2\x17\x5f\xd5\x10"
      "\x17\x66\x00\x49\x04\x59\xe8\x68\x3c\x4f\xa5\xec\x79\x90\xbc\x60\x26\xbd"
      "\x19\x13\xe8\xf1\xf4\x75\x70\xb5\x9d\x6d\xfc\x4e\xf9\x3b\xc4\x95\x7c\x0d"
      "\x29\xb0\x67\x87\xed\x99\x0e\xde\x61\xd2\x29\x12\xd6\x7a\xc7\x75\x6c\x06"
      "\x13\xef\xea\xf0\x5a\x3c\x38\x1c\xbe\xa6\x0c\x2a\x9b\x46\xd4\x23\xd3\x88"
      "\xe0\x54\xe9\x18\xef\x0f\x44\x61\x08\xd7\x94\x22\x99\x18\x2e\x08\xee\x4c"
      "\xfa\xbf\x44\x05\xb5\x86\xba\xb2\xea\xc6\xe4\x6a\x6f\xb0\xbd\x1b\x8a\xbc"
      "\x18\xa3\xc6\xaa\x20\x40\xe2\x56\x64\x47\xb0\xe3\x74\xb2\x2c\x8d\xeb\x58"
      "\x51\xc9\x26\xf3\x2d\xfc\xfa\xce\x6c\x03\x69\xf7\x4c\x56\x48\xff\x0f\xff"
      "\xba\xf7\xec\xab\x7b\xb5\x28\xfb\xa4\x89\xe0\x35\xa1\x07\xa4\x66\x1d\xa2"
      "\xfe\xeb\xdb\x70\x11\x0f\x05\x4d\xb7\xec\xca\x01\x0f\xd9\xec\xf4\xd8\x70"
      "\x59\x92\x1d\x4d\x49\x54\xc9\x76\xe4\xd0\xeb\x86\x3a\x5d\xf6\x9d\x80\xe2"
      "\xcb\xd4\x6a\x34\xe7\x7c\x38\x6a\x1f\x7c\xba\x7b\x9d\xe0\x1c\xe3\xd1\xaf"
      "\x44\x1f\x93\xa4\x99\x64\xe0\x11\x13\x41\xbb\x25\xc4\x5e\x88\xf9\x67\xee"
      "\x76\x76\x1f\x1f\xc2\xc5\x15\xf8\xef\xb8\x56\x92\xab\x35\x65\x99\x05\xf7"
      "\x57\xe5\xe8\x7b\x8b\xb5\x11\x71\xfd\x6c\x94\x14\x73\x46\xcb\xbd\xda\x09"
      "\x37\x22\x2b\xad\x14\xc8\x9b\x8a\xb5\x71\x2a\x1a\x32\xf8\x94\x99\x5f\x5c"
      "\x95\xc8\x26\xce\x7e\x0c\x9c\x6e\xcb\xa5\xee\xe6\xb7\xfc\x37\x01\x36\x09"
      "\x95\xfb\xdb\x90\x5c\x72\x8e\x17\xd2\x6c\x85\x58\xde\x86\x55\x7f\xf6\x14"
      "\x5c\xb6\x2b\x87\x3f\x10\xb2\xbf\x6c\x1f\xdc\x18\x64\xb2\x7a\x31\x81\xc8"
      "\x35\x33\xa2\x07\x52\x92\x38\x93\xf7\x4b\xcf\xf1\xca\x79\x2a\x09\xe4\x7e"
      "\x31\x4e\x48\xbe\x36\x3e\x7c\x08\x00\x7a\xfb\xa3\xad\x97\x18\x2a\xfb\xc9"
      "\xfb\xc3\x14\x78\xb7\x49\xbe\xa3\x38\x5b\x8a\xf1\x7e\xb0\x8e\xbc\xbd\xd3"
      "\xa9\xe6\xdf\x43\x44\x68\xac\x21\xfc\xc7\x9d\xe6\x9a\x3c\xd0\x45\x6b\x73"
      "\x88\xa2\xf0\xfd\xee\xe7\xb1\xfe\xb3\xae\xa7\x2e\x04\x69\xc3\x3c\x10\x34"
      "\x5e\x43\xc8\x65\x8e\xd8\x26\xc6\x32\x3e\x0e\x19\x53\xb4\xa9\x6a\x0b\xad"
      "\xd7\x2f\x6f\x9e\x27\xec\xe9\xf6\xf4\x2b\x5e\xde\xbc\x23\xa9\xf7\x1c\xed"
      "\x39\x10\xc5\x33\x98\xe7\xb3\x91\x28\x87\xa2\x42\x55\x38\x64\x33\x0f\x1e"
      "\x46\x2a\xc3\x90\x15\xdf\x6f\x90\xa9\xbc\xbf\xf9\xc4\x8e\xc7\x4e\x1f\xb2"
      "\xa1\xb5\xf0\xa6\xa7\xa9\xf1\xe3\xb2\x63\xc8\xae\x8c\x61\x81\xb3\x1e\x94"
      "\xe8\x91\xe1\x89\xf2\x64\x62\x1b\x0c\xe0\x5d\x58\xdd\xd2\xf2\xc6\x79\xa0"
      "\x0a\x16\x73\xb5\x90\x50\xf6\x51\x4f\xb7\x49\xdb\x52\x70\x4b\xb3\xfc\x91"
      "\xf8\x9f\x21\x8a\x9f\x3e\xec\xeb\x1e\xe5\xf8\xcf\x64\x09\x33\xda\xd8\x78"
      "\x06\x1b\xc4\x03\x2a\xea\xd1\xcd\x4d\xcd\xff\xf1\xe2\xa4\xc8\x0e\xa0\x5c"
      "\x7b\xd2\x1b\xcc\x24\x76\x75\x01\xc3\xc9\x1e\x41\x30\xf4\x7e\x65\xfc\x7f"
      "\x8b\x6a\x30\x72\x82\x48\xf4\xcc\x23\xf5\xf4\x1d\x09\xe8\x05\xb3\x6b\x1e"
      "\x7f\x54\x34\xcf\xbc\x44\x0c\x30\x79\x40\x9e\x7d\x87\x25\x54\x15\x1e\x06"
      "\xc4\x09\xa7\x5d\x95\x3d\x8a\x8d\xc4\x86\x18\xa4\x61\x9d\xe1\x69\xa0\xe8"
      "\xf9\xf6\xef\x67\x8c\xec\x6d\xe0\xaf\x81\x44\xd0\x50\x7d\x3a\x84\x54\xc0"
      "\x55\xb0\xd5\x91\x79\x84\x20\x87\xff\xe0\x06\xa2\xfa\xa1\xee\x48\x6f\x79"
      "\xc2\xca\xe6\x48\x0a\xad\xd0\xfd\x88\xe4\xe2\xbd\xfb\x27\xbd\x19\x5e\xca"
      "\xaa\xed\x03\x3b\x77\x20\x82\x9c\x9e\x15\x84\xdf\x84\xaf\xa8\xe2\x16\xd7"
      "\xf3\x17\xbb\xa6\x13\x2f\x2b\xe5\x3e\xfb\x90\x37\x86\x5d\x39\x42\xe3\xdf"
      "\xe8\x37\x19\xeb\xb3\xa4\xc5\xb6\xe6\x14\xf7\xc6\x5f\xbe\xe5\xa0\xff\xd8"
      "\x5e\x25\x00\x59\xa2\xba\xa8\xb7\x83\xdd\xd7\x8a\xd4\x22\x41\xa9\xae\xca"
      "\x07\xe8\x0a\xcc\x61\xcd\x10\x2c\xc2\x59\xb8\x8d\xc2\x29\x2c\x48\x06\xda"
      "\x43\xb1\x0b\x2a\x93\x2d\x31\x2e\x31\x12\x34\x21\x66\x8d\xfa\xe6\x14\xe4"
      "\x18\xdc\xa3\x0b\xe1\xdd\xb0\x64\x9c\x75\xe5\x86\xd3\x6f\x46\x83\x29\xf6"
      "\xa0\xed\x71\xf5\xd3\x1b\x95\xd5\x1f\x36\x66\x52\xc5\x57\xd6\xca\x1f\x53"
      "\xc4\xb2\xcd\x79\x3e\xb0\xe1\x97\xbd\x41\xbe\x9d\xd3\x56\x64\x5b\xa1\x93"
      "\x2e\x97\x09\x40\xdb\x5b\x8c\xb4\x40\x88\x66\x82\x52\x8a\xe6\x2f\xb6\x83"
      "\xbf\x08\x8d\x4a\xfa\x23\xb6\x73\x41\x44\x31\xb0\x49\x33\x78\x63\xb5\xb1"
      "\x87\xad\x1d\x96\x75\x2c\xb5\x74\xc4\xe0\x0d\xbb\x9a\x75\x5b\x8d\x24\x20"
      "\x79\x53\xa7\x66\x15\xcc\x7f\xf1\x9e\xe8\x12\x31\x49\x7a\x03\xf2\x85\x8d"
      "\x17\x8d\x53\x4d\xfb\xa4\x82\x44\xfe\x4a\x91\xe3\x5e\x38\xf0\x42\x5f\x24"
      "\x86\xec\x81\xc3\x44\xe2\xec\xb7\x44\xe8\x27\x84\xad\xdd\x81\x0f\x9f\x74"
      "\x62\x1d\x6d\xe3\x49\x8d\x2d\xf5\xd0\x10\x58\x5c\xe9\x2d\xc6\x64\xf2\xed"
      "\x4b\xc3\xf9\xf0\xdf\x59\x8d\xae\x6b\xfc\x2b\xa9\x6e\x19\xd9\x76\x5b\x27"
      "\x29\x95\xdd\x9c\xe6\xc1\x1a\xb8\x0e\x89\xf2\xf6\x49\x55\x0a\x27\x23\x73"
      "\x78\x26\x9e\x91\x64\x0f\x72\xf5\x6f\x52\x21\x8e\x8b\xaf\xb9\x44\xc0\x68"
      "\x96\x98\xc1\xfb\x13\x69\xab\x1e\xf0\xba\x24\xdf\x46\xf2\x9e\x88\x5c\xc5"
      "\x30\xb9\x6b\x6c\x39\xae\x6c\xe8\x66\x95\x61\x40\x31\x7b\x4c\x2a\x1e\x10"
      "\xc5\x84\x75\xc2\x98\x62\x05\xa6\x6b\x77\xb2\xbc\x28\x86\x3c\xc3\x16\xee"
      "\x2d\x1a\xda\x52\x51\x39\xa4\x5f\x7c\x16\x89\x3e\x2b\xd2\x1c\x82\xd4\x5e"
      "\x36\xe1\xc9\xb4\x46\x0c\xf5\xac\x98\xe4\x7d\x4e\x52\x1c\x2d\xcb\xd8\x68"
      "\x3d\x1a\x5e\x21\x73\x15\x85\x6d\xa3\x6f\xde\xed\x86\x1a\x5e\x2c\xe9\x4e"
      "\x19\xbc\x37\xcb\x0e\x36\xa2\x4d\x86\x7e\xd5\x7a\x1d\x87\x57\xd0\x7d\x82"
      "\x64\x3c\x89\x8d\xb6\x41\x80\x03\x99\x22\x3d\x1d\xc6\xa8\x46\xc1\xfe\x56"
      "\x9a\x67\x9e\x9b\x79\xed\x85\x3b\x79\x5a\x3a\x83\x48\x6b\x04\x8c\x88\xf7"
      "\x6a\x69\x10\x38\x93\x08\xad\x87\x6b\x54\x00\x2c\x1f\x40\xcc\x07\x40\xcc"
      "\x62\xee\xec\x8d\x54\x3a\x16\x4d\x2a\x01\x27\xa3\x86\x88\xab\x2b\x0e\x5e"
      "\x71\xf9\x52\x52\xd9\x94\x53\x50\x60\xcd\xfb\x44\x3e\xc0\x30\xd6\xc8\x32"
      "\xc0\xbc\x80\x5a\x44\xaa\x53\xfb\x7b\xaf\x28\x75\xe4\x3e\xe1\x62\x09\x00"
      "\x7e\x02\xb5\xc1\x2f\x9e\x15\xd5\xf3\x70\x01\x0a\x81\x4e\x5f\x36\x2f\x0f"
      "\xcd\x1c\xcc\x7c\x8e\xea\x30\x64\x43\x04\x35\xae\x45\xdb\x97\x18\x54\x00"
      "\x07\x92\x18\xf7\x02\x99\xb2\xb7\x88\xab\x6e\xb5\xfc\xa3\xbf\x0b\xa6\x2a"
      "\x4a\x74\x49\x78\x4b\x67\x00\xce\xe3\xc6\xab\x98\x6c\x88\xf7\x20\xea\x46"
      "\x6a\x50\x11\xe1\x29\xdf\xde\x7e\xbe\xa5\xb1\xf8\xb1\xdc\x26\x5b\xe5\x09"
      "\x2a\xe1\x90\x26\xd5\x1b\x45\x74\xf1\xf5\xf2\xdc\x26\x5f\x55\x54\xff\x64"
      "\x88\xae\xa2\xe8\xed\xf3\x47\x74\x3d\x23\xdd\xab\x19\x9f\xb5\xe0\x17\x14"
      "\xdf\xbc\x80\x19\xbe\x6a\x03\x50\xc5\xe9\x0a\x18\x54\x64\xc0\xf5\x60\xe2"
      "\x55\xe0\xee\x07\x2e\x2d\x9f\x29\xcc\x78\x6d\xbd\xe4\x27\x40\x74\x5e\x22"
      "\xf0\xd0\x47\x16\x0a\x02\xcc\x66\x23\x17\xc0\xdb\xe0\xda\xf0\x1d\x0c\xa1"
      "\x63\x92\x84\x32\x70\xdf\x76\xd4\x7a\x3a\x7b\x02\xc0\xbc\xd5\xd2\x51\x34"
      "\x43\x0b\xb7\x72\xf7\x5b\x32\xb6\xbe\x20\xc8\xb0\x86\xb0\x76\x53\xb9\x2f"
      "\xbd\xf1\x54\x10\x0c\x83\x03\x80\xef\x8a\x11\x0b\x0f\xe2\x3e\xfc\xe3\x38"
      "\x50\x2f\xd8\xc5\xa1\xb8\x68\xa5\x14\x45\xef\x49\xe0\x2c\x8d\xb9\xc4\x23"
      "\x5b\x55\x49\x4d\x0f\xcd\x55\xe8\x2d\x98\xf9\xc6\x40\x0c\xd4\x1d\x2f\x23"
      "\xc1\x2d\x86\x6a\x84\x79\x06\x12\x8b\xcc\x19\xdc\x98\x85\xb7\x5e\xcf\x6e"
      "\xd6\xa4\x71\xeb\x8a\xaf\xc5\x1c\x18\x26\x35\x54\x5d\x91\x97\x72\xa1\xfb"
      "\x0b\x41\x4c\xcb\x8c\x08\xd6\x5c\x26\x61\x23\x84\xd6\x18\x24\x16\x7d\x36"
      "\x66\xcd\x54\xe0\x52\xe6\x5e\x0c\x81\xb8\xdd\x6c\xb9\xa2\xe2\xc2\x93\x1f"
      "\x44\x5d\xbe\x90\xef\xa2\x46\x38\x52\xd4\xed\x10\xc6\x3f\x83\x60\x96\x6a"
      "\x1c\x4e\xa0\xc3\xa3\x8c\x39\x3f\xc7\x63\x65\xac\x1a\xd1\x23\x19\xfd\xde"
      "\xb1\xc4\x94\x42\x1a\x0e\x21\x9b\x60\x2f\xda\xd2\x84\x1e\xdc\x95\xec\xdf"
      "\xfe\x27\xd9\x64\x32\x42\xb2\x21\x6f\xa9\xbb\x3d\x9c\xc6\x41\xda\xa0\x84"
      "\x0c\x4e\x10\x70\xba\x40\x59\x67\xd1\xff\xa5\xe3\x01\xab\x89\x33\x0b\xe6"
      "\x55\x27\x52\x72\x3f\x18\xa9\x35\xd4\xe8\xe8\xf7\x76\xf6\xbd\xa9\x8e\x36"
      "\x29\x02\x4e\xfb\x76\x02\x80\xc3\xfb\xa4\xa0\x52\xa2\xb8\x1d\x1f\xdd\x48"
      "\xe7\xd7\xa2\xe6\x7a\x96\x60\x7d\x75\x91\xe2\xa8\x6e\xe2\x6d\xbd\x7c\x84"
      "\x89\x5c\x7d\x44\x70\x29\x8b\x29\x0a\x5a\x51\x6d\x0d\x75\x47\x98\x70\xf4"
      "\x3e\x63\x3b\xea\x51\x15\xe2\x68\x60\xae\x67\x13\x9c\x89\xb0\x7e\xc7\x07"
      "\xa6\x49\x5e\xd5\xaf\x83\xd1\x58\x38\x5a\x74\xb5\x90\x63\x30\x51\x44\x67"
      "\x25\xdc\xab\x2d\x82\x86\x97\xa4\xba\xd2\x1a\xcb\x99\x7c\xcb\x85\x12\x0c"
      "\x99\xe6\xbc\x01\xa6\x99\x8f\x11\x38\x70\x48\x26\x85\xa6\x4d\xaf\xe4\x70"
      "\x07\xf5\x4b\x6c\x0f\x47\x0f\xca\xc9\x07\x32\xee\x94\xe3\x40\x57\x72\x68"
      "\xc0\xd0\x32\xe2\x7d\x7c\x56\x37\x24\x3f\x6e\x8a\xb8\x5b\x6f\x6e\x64\x12"
      "\x61\xa8\xf5\x38\xce\xbf\x9b\x70\xf0\xa5\x6f\x82\xe3\xbb\x2d\x92\xbb\x12"
      "\x4b\xc6\xcf\x60\x52\xd5\x71\xe9\x67\xd1\x58\x1c\x64\x6d\x3f\x32\xc9\x26"
      "\xb2\xb0\x95\x39\x70\x03\xf7\x17\xb1\xe1\xa6\x06\x5a\x25\x46\xce\x96\x27"
      "\xfc\xec\xae\xe2\xed\x85\xfc\x9e\xcb\xaa\x42\x5a\xf0\x26\x8d\xad\xa8\x6a"
      "\xb9\x7f\x02\xcb\xf3\xc2\x69\x6c\x1c\x7f\xc3\xb7\x09\xd0\xc4\x92\xd2\x5f"
      "\x4f\x50\x5b\x47\x1d\x44\x4e\x66\x78\xfe\x8a\xd3\x4d\x70\xa6\x19\xdf\xaa"
      "\x9d\xd5\xab\x66\x25\x2b\xa6\x90\xa2\x35\xa4\x12\xb8\x7f\x0e\x23\xd2\xdb"
      "\x8a\xe1\x99\xad\xc1\xac\xff\xcf\xfa\x20\x73\xd5\x74\x37\x88\x5c\xea\x9b"
      "\xea\x1b\xae\x55\xd4\xea\x02\x55\x51\xcb\x9d\x69\x7d\x41\x3e\x54\x8c\x52"
      "\x9b\x3c\x5b\x61\x7b\xfb\xc5\x31\xf0\xd2\x85\x6d\x50\xca\xa5\x20\xbb\x21"
      "\x5d\x3e\xdc\x20\x84\xda\xd7\x70\x40\xa6\x2a\x8a\x8f\xb8\xc1\x47\xd6\x27"
      "\xac\x77\x1d\xe4\xfd\x74\xdd\x08\x37\x0d\xf7\x73\x02\xd7\xbd\xed\x8c\xd7"
      "\x08\x15\x8c\x89\x70\xcd\x0c\xb5\x7b\xcd\x0d\x1c\xa8\x98\x55\x5d\x6b\xef"
      "\x67\x4d\x16\x1c\x3a\x3a\xb5\xf0\x74\x9c\x83\x8d\x2a\x8e\x44\xdd\x31\x50"
      "\x25\xc8\x50\xee\x69\x2c\xa9\xbd\x88\x2a\x54\x54\x63\x30\xb8\x3f\xc5\xf3"
      "\xe8\x6a\x24\xec\x75\x0e\x14\x67\x44\x52\xcf\xbf\x14\x46\x26\x55\xa6\xb8"
      "\x42\x81\x2f\x63\xed\x04\xb4\xb0\x67\x08\x5b\x09\xcc\x63\x5d\xb0\x38\xcb"
      "\x3a\xa0\x82\xd8\x11\xb8\xbe\x46\x1b\x1b\x2d\x2f\x18\x0c\xd3\xae\x05\x99"
      "\xb5\xf5\x33\x7e\xa5\x8b\x4f\xa6\x28\xdf\x61\x5f\xca\x86\xb8\xae\xb7\x7d"
      "\x4f\xee\xa3\x0c\x53\xf0\xdc\xba\x01\xed\xcc\xb3\xea\xdf\x05\xa9\x93\x68"
      "\x1f\x0c\x9e\x16\xb4\xc0\xf4\x37\x16\x72\x7f\x75\xdd\x3b\x98\xe1\xb2\xc0"
      "\x27\x00\x45\xfd\x05\x86\x39\xaa\x49\x82\x25\x8f\x15\xa2\x39\x92\xe3\x40"
      "\x66\x84\xfd\xfa\x8a\x55\xea\x5e\x73\x41\xa9\x9b\xa5\x7f\x24\x85\xa8\x43"
      "\x9d\x43\x03\xbc\x1b\x53\x38\xd6\x96\x8b\x88\x5c\xb2\xf2\x90\xcf\xb3\x7d"
      "\x6d\x35\x87\x6f\x24\x43\x58\xf2\xf2\x82\xdb\x7f\x09\xae\x6f\x9e\xc5\x1b"
      "\x23\x3c\xe4\x59\xe3\x7c\x72\x26\x93\xf4\x90\x1e\xef\x12\x62\x31\x9e\x3c"
      "\xde\x36\xa5\x21\x09\x00\x8d\x6b\x56\x4b\xc6\xb4\x92\x81\xcf\x80\x1c\x2d"
      "\x17\x17\x00\x13\x70\xdd\xf6\x7e\x43\x54\x4d\xec\xc2\x4b\x80\xe3\x82\xa6"
      "\x73\x4e\x57\xc8\xfb\x7d\x2f\xd6\xc4\x66\x6e\x3b\xa4\x29\xd6\x88\x64\xf3"
      "\x61\x02\xa8\x5e\x22\xc5\xa4\xf9\x8f\xd9\x0f\xcd\x92\x7a\x31\x0e\x5d\x3b"
      "\xc6\x5c\x98\xa2\x3d\x3e\xb8\x0e\x8b\xe0\xec\x57\x5e\x68\xa6\xd1\x47\xcc"
      "\xee\x36\xc9\x7a\xf1\x77\x8a\x72\xab\x02\x5f\x4c\x78\x63\xfe\x18\xd0\x6d"
      "\xf8\x47\x95\x03\xa7\xb4\xc7\xa5\x9c\xfe\x9e\x8d\x84\xee\xff\x4a\xef\x50"
      "\x2b\x5b\xd0\xd9\x34\xa2\x09\x5e\xe7\xbf\x15\x8c\xf1\xc2\x07\xbf\xbf\x86"
      "\x6e\x52\xee\x40\x94\x13\x8e\x37\xab\x09\x4c\xbd\xff\x18\x7a\xb9\x3f\x58"
      "\x7f\x04\x51\x87\xdd\xf6\x33\x18\x2e\x33\xff\x07\x00\x00\x25\x72\x75\x08"
      "\xe5\xaa\xd7\xd9\xe1\xec\x03\x60\xab\x80\x79\xdf\xaa\x22\x7c\xc3\x85\x27"
      "\x17\xe0\xdf\x31\x2f\x3f\x54\x7a\x7b\x78\x0b\x1b\xab\x63\x1b\xa8\x4b\x17"
      "\x47\x11\xaf\xba\xc3\xc6\x73\x24\x24\xfd\x69\x69\xea\xd8\xad\x0d\x3a\xad"
      "\x14\x02\xe3\xe5\x34\x12\x43\x72\xb4\xfe\x0b\xd1\x2d\x79\x55\xb4\x15\x95"
      "\xc9\x6b\xab\xc6\x72\x88\x6b\x9b\xfc\x81\x4a\x65\xd0\x1a\xff\x89\xbf\x23"
      "\xde\x9e\x0b\xd8\x57\x18\xf7\x7d\x38\x15\xc8\x40\xe6\xb1\xd0\x40\xd6\xa4"
      "\x6a\x1e\x82\x69\xe2\x9e\x7c\xed\x1f\x34\xd3\xcf\xa6\xe8\x28\x1d\xac\xfb"
      "\xdf\x48\xd8\x64\x20\xdc\x35\x4c\x47\xd5\xf7\x80\x87\xcc\x7a\x80\x49\x5b"
      "\x62\x3b\x64\xa1\xa9\xd3\xe8\xb1\x7d\x65\x41\x66\x00\xbb\x45\xb0\x5f\x2e"
      "\x82\x3b\x43\xfd\x6a\x8f\x15\x3f\x16\x75\xfc\x18\xb7\xf4\x6c\xeb\xf1\x17"
      "\x9e\x53\x81\x6a\x03\xd7\x96\x99\x0f\xdf\xd0\x17\xf1\xc7\x99\x8e\x80\x38"
      "\x53\x86\x5e\x6c\xe4\x19\x90\xd1\x43\x0b\x83\xcd\x4e\xc3\x55\xd4\xdc\x68"
      "\x76\x98\x0e\xb4\x86\x24\x2e\x98\xd2\xc1\x9d\xac\xb2\xfd\xf6\x15\xae\x7d"
      "\xce\xd3\xed\xb3\xa4\xbd\x00\xa9\x59\xb4\x8d\x52\xc1\x8f\x3e\x2f\x7c\x67"
      "\xbd\xf4\x08\xe6\x0c\xad\x90\xaa\x5a\x91\xc9\x66\xff\xa4\x7f\x1a\x0a\x37"
      "\x2b\x33\x4f\x00\xc5\x04\x08\xfa\xf9\xd7\x0e\xb1\x19\x2e\xd4\xdd\xa0\x21"
      "\x4f\xd4\xce\x3f\xbf\x40\x91\xf9\xc6\x0c\x29\x32\xf6\x5b\x0a\x4f\x6f\x6f"
      "\x98\x27\xd1\x49\xfe\x7c\x6d\xad\xa6\x78\xcd\xb7\x65\x88\x75\x88\xef\x62"
      "\xce\x2e\xe5\x2b\x74\x63\x5b\x11\x4e\xdb\x54\x67\xbf\x33\xd2\x72\x76\x5a"
      "\x3a\x4f\x40\x13\xee\xd1\x55\x87\x2b\xa4\x2d\xdf\xc1\xb0\xea\xcd\x14\x8a"
      "\xde\xaa\x81\x51\xdf\xb4\x74\xfc\x98\x1b\x02\xe0\x59\x65\x84\xea\x6d\xeb"
      "\x94\x0f\x7b\x01\xa9\x0b\xc5\x94\x91\x0d\xbd\xd3\xb2\x41\x05\x2e\x58\x4d"
      "\x61\x05\xee\xd2\xca\xb4\xe3\x2a\x8b\xa5\xea\x0c\xf0\x1b\xbd\x6c\x25\x5d"
      "\xfc\xbc\x82\xf5\x30\xf4\xbf\x98\xe5\x4a\xe3\x1c\xa1\x1f\x9d\xa6\xdd\x4e"
      "\xb1\xec\x99\xd9\x86\x0a\xb2\xfd\x10\xe5\xbf\x32\xa3\x14\x2f\xb8\x08\xdc"
      "\xc9\xe8\x95\xe1\xa7\xcf\x56\xc6\x22\x16\x7d\x92\x86\x43\x65\x48\x90\x95"
      "\x0c\xb0\x0f\x18\xec\xcc\xa8\x88\x42\x67\x5a\xa7\xff\xe5\xd0\xf7\x21\x78"
      "\x9a\x81\x62\x06\x71\x1d\x81\x19\x9f\x5f\xa7\x30\xfc\x64\x09\x4b\xa0\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
      4096);
  *(uint64_t*)0x20000098 = 0x1000;
  *(uint64_t*)0x200000a0 = 0;
  *(uint64_t*)0x200000a8 = 0;
  syscall(__NR_writev, r[2], 0x20000080ul, 3ul);
}
int main(void)
{
  syscall(__NR_mmap, 0x1ffff000ul, 0x1000ul, 0ul, 0x32ul, -1, 0ul);
  syscall(__NR_mmap, 0x20000000ul, 0x1000000ul, 7ul, 0x32ul, -1, 0ul);
  syscall(__NR_mmap, 0x21000000ul, 0x1000ul, 0ul, 0x32ul, -1, 0ul);
  loop();
  return 0;
}
